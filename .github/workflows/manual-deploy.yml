name: Manual Deploy with All Newsletters

on:
  workflow_dispatch:
    inputs:
      deploy_message:
        description: 'Deployment message'
        required: false
        default: 'Manual deployment'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Fetch RSS feeds
        run: |
          npm run fetch-feeds
          # Verify we have newsletters
          NEWSLETTER_COUNT=$(cat src/data/content.json | jq '[.[] | select(.type == "newsletter")] | length')
          echo "üìß Newsletter count: $NEWSLETTER_COUNT"
          if [ "$NEWSLETTER_COUNT" -lt 15 ]; then
            echo "‚ùå ERROR: Expected at least 15 newsletters, got $NEWSLETTER_COUNT"
            echo "‚ö†Ô∏è  Proceeding with deployment anyway for manual trigger"
          elif [ "$NEWSLETTER_COUNT" -lt 50 ]; then
            echo "‚ö†Ô∏è  WARNING: Only $NEWSLETTER_COUNT newsletters fetched (expected 50+)"
            echo "This may be due to Substack blocking GitHub Actions IPs"
          fi
      
      - name: Verify all newsletters are present
        run: |
          echo "üìä Content Statistics:"
          cat src/data/stats.json
          echo ""
          echo "üìÑ Newsletter sources:"
          cat src/data/content.json | jq '[.[] | select(.type == "newsletter") | .source] | group_by(.) | map({source: .[0], count: length})'
      
      - name: Build Astro site
        run: npm run build
      
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: zerodha-content-hub
          directory: dist
          wranglerVersion: '3'
      
      - name: Deployment summary
        run: |
          echo "‚úÖ Deployment completed successfully!"
          echo "üìÑ Newsletter verification:"
          cat dist/content.json | jq '[.[] | select(.type == "newsletter")] | length' | xargs echo "Total newsletters in build:"